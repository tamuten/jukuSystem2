<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper> -->
<mapper
	namespace="com.example.demo.login.domain.repository.mybatis.TeacherSubjectMapper">
	<resultMap
		type="com.example.demo.login.domain.model.TeacherSubject"
		id="teacherSubject">
		<id column="teacher_id" property="teacherId" />
		<id column="subject_id" property="subjectId" />
	</resultMap>

	<insert id="insertBulk">
		INSERT INTO teacher_subject
		(teacher_id, subject_id)
		VALUES
		<foreach collection="tsList" item="ts" separator=",">
			(
			#{teacherId, jdbcType=VARCHAR}, #{ts, jdbcType=VARCHAR}
			)
		</foreach>
	</insert>
	<select id="findOnesSubject" parameterType="string"
		resultType="com.example.demo.login.domain.model.TeacherSubject">
	SELECT
	*
	FROM
	teacher_subject
	WHERE
	teacher_id = #{ id }
	</select>
	<update id="updateOnesSubject">
 	INSERT INTO
	teacher_subject
	VALUES
		<foreach collection="tsList" item="ts" separator=",">
			(
			#{teacherId, jdbcType=VARCHAR}, #{ts, jdbcType=VARCHAR}
			)
		</foreach>
	ON CONFLICT (teacher_id, subject_id) DO NOTHING;
	DELETE FROM
	teacher_subject ts
	WHERE
		teacher_id = #{ teacherId }
		AND subject_id NOT IN
		<foreach item="ts" open="(" close=")" collection="tsList" separator=",">
                    #{ ts }
        </foreach>
	</update>
	<delete id="deleteOnesAll" parameterType="string">
	DELETE FROM
	teacher_subject
	WHERE
	teacher_id = #{ teacherId }
	</delete>
</mapper>